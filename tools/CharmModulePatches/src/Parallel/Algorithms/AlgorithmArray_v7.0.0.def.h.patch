diff --git a/src/Parallel/Algorithms/AlgorithmArray.def.h b/src/Parallel/Algorithms/AlgorithmArray.def.h
index cddf08f..b58f4d9 100644
--- a/src/Parallel/Algorithms/AlgorithmArray.def.h
+++ b/src/Parallel/Algorithms/AlgorithmArray.def.h
@@ -540,16 +540,17 @@ void CProxyElement_AlgorithmArray <ParallelComponent, SpectreArrayIndex> ::start
 /* DEFS: void receive_data(const typename ReceiveTag::temporal_id &impl_noname_7, const ReceiveData_t &impl_noname_8, bool enable_if_disabled);
  */
 template <class ParallelComponent, class SpectreArrayIndex> 
-template <class ReceiveTag, class ReceiveData_t, typename Fwd1, typename Fwd2>
+template <class ReceiveTag, typename Fwd1, typename Fwd2>
 void CProxyElement_AlgorithmArray <ParallelComponent, SpectreArrayIndex> ::receive_data(Fwd1 &&impl_noname_7, Fwd2 &&impl_noname_8, bool enable_if_disabled, const CkEntryOptions *impl_e_opts) 
 {
+  using ReceiveData_t = Fwd2;
   ckCheck();
   AlgorithmArray <ParallelComponent, SpectreArrayIndex>  *obj = ckLocal();
-  if (obj) {
+  if (obj != nullptr and not Parallel::detail::max_inline_entry_methods_reached()) {
   envelope env;
   env.setTotalsize(0);
   env.setMsgtype(ForArrayEltMsg);
-  _TRACE_CREATION_DETAILED(&env, CkIndex_AlgorithmArray <ParallelComponent, SpectreArrayIndex> ::template idx_receive_data_marshall9<ReceiveTag, ReceiveData_t>());
+  _TRACE_CREATION_DETAILED(&env, (CkIndex_AlgorithmArray <ParallelComponent, SpectreArrayIndex> ::template idx_receive_data_marshall9<ReceiveTag, ReceiveData_t>()));
   _TRACE_CREATION_DONE(1);
   CmiObjId projID = ((CkArrayIndex&)ckGetIndex()).getProjectionID();
   _TRACE_BEGIN_EXECUTE_DETAILED(CpvAccess(curPeEvent),ForArrayEltMsg,(CkIndex_AlgorithmArray <ParallelComponent, SpectreArrayIndex> ::template idx_receive_data_marshall9<ReceiveTag, ReceiveData_t>()),CkMyPe(), 0, &projID, obj);
@@ -650,7 +651,7 @@ bool CProxyElement_AlgorithmArray <ParallelComponent, SpectreArrayIndex> ::invok
   envelope env;
   env.setTotalsize(0);
   env.setMsgtype(ForArrayEltMsg);
-  _TRACE_CREATION_DETAILED(&env, CkIndex_AlgorithmArray <ParallelComponent, SpectreArrayIndex> ::template idx_invoke_iterable_action_void<ThisAction, PhaseIndex, DataBoxIndex>());
+  _TRACE_CREATION_DETAILED(&env, (CkIndex_AlgorithmArray <ParallelComponent, SpectreArrayIndex> ::template idx_invoke_iterable_action_void<ThisAction, PhaseIndex, DataBoxIndex>()));
   _TRACE_CREATION_DONE(1);
   CmiObjId projID = ((CkArrayIndex&)ckGetIndex()).getProjectionID();
   _TRACE_BEGIN_EXECUTE_DETAILED(CpvAccess(curPeEvent),ForArrayEltMsg,(CkIndex_AlgorithmArray <ParallelComponent, SpectreArrayIndex> ::template idx_invoke_iterable_action_void<ThisAction, PhaseIndex, DataBoxIndex>()),CkMyPe(), 0, &projID, obj);
